% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install_clone.R
\name{install_clone}
\alias{install_clone}
\title{Install the cloned version of a repository in R}
\usage{
install_clone(dir)
}
\arguments{
\item{dir}{The full file path to the directory you want to
\enumerate{
\item unload if loaded,
\item build a .tar file for,
\item install in your R libraries, and
\item load into your current work space.
}}
}
\value{
A character value of the name of the package.
}
\description{
There is a lot of overhead in building an R package from a cloned repository
if you cannot use \link[devtools:load_all]{devtools::load_all}, such as \code{sa4ss} or any package
that uses \code{rticles} in a formal way.
This function acts similarly to
\link[devtools:load_all]{devtools::load_all} and \link[remotes:install_github]{remotes::install_github}
in that you can use a package available on github
by running a single line of code.
Though, there will be some differences,
such as un-exported functions will need to be accessed using \code{:::}, not \code{::}.
The benefit of using this function instead of \link[remotes:install_github]{remotes::install_github} is that
you do not have to access the internet and you can use local changes that
are not yet pushed to the repository.
This may not be an issue if you have a token.
}
\author{
Kelli F. Johnson
}
