% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/change_pars.R
\name{change_pars}
\alias{change_pars}
\title{change parameter values in a table within the control file list object in R}
\usage{
change_pars(
  pars,
  string,
  LO = NULL,
  HI = NULL,
  INIT = NULL,
  PHASE = NULL,
  verbose = TRUE
)
}
\arguments{
\item{pars}{A parameter table from the control file list object. For the
initial 2021 lingcod models, this can be any of
\code{MG_parms}, \code{SR_parms}, \code{Q_parms}, \code{Q_parms_tv}, \code{size_selex_parms}, or
\code{size_selex_parms_tv}.}

\item{string}{String (with optional partial matching) indicating which
parameters to be modified. When multiple parameters match the string
they will all be changed.}

\item{LO}{New lower bound value}

\item{HI}{New upper bound value}

\item{INIT}{New initial value}

\item{PHASE}{New phase value}

\item{verbose}{A logical value specifying if output should be printed
to the console or not. The default is \code{FALSE}, which will suppress messages.}
}
\value{
A data.frame of parameters that can be inserted into the inputs$ctl list.
}
\description{
applies no LO, HI, INIT, or PHASE value to parameter line in a table of
parameters within the list created by \code{\link[=get_inputs_ling]{get_inputs_ling()}} or
\code{r4ss::SS_readctl()}. This is similar to \code{r4ss::SS_changepars()}
but that function modifies the control file itself not the corresponding
R object.
}
\examples{
\dontrun{
  # read inputs
  inputs <- get_inputs_ling(id = get_id_ling(newdir))
  # copy control file info to new object
  newctl <- inputs$ctl
  # update parameter lines for first double-normal parameter
  newctl$size_selex_parms <-
    change_pars(pars = newctl$size_selex_parms,
                string = "SizeSel_P_1",
                LO = 20,
                HI = 100,
                INIT = 60
                PHASE = 3)

  # check which lines match a string with no changes
  change_pars(pars = newctl$SR_parm, string = "R0")
}
}
\author{
Ian G. Taylor
}
